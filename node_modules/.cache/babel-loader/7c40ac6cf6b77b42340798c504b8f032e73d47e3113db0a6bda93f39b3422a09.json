{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-3fee8032\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"validation-container\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Driver Validation\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = {\n  \"class\": \"driver-info\"\n};\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"Driver Information\", -1 /* HOISTED */);\n});\nvar _hoisted_5 = {\n  \"class\": \"upload-documents\"\n};\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"Upload Documents\", -1 /* HOISTED */);\n});\nvar _hoisted_7 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"license-upload\"\n  }, \"Driver's License:\", -1 /* HOISTED */);\n});\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"insurance-upload\"\n  }, \"Car Insurance:\", -1 /* HOISTED */);\n});\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"validation-status\"\n};\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"Validation Status\", -1 /* HOISTED */);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" Display driver information from MongoDB \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.driverInfo.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"License Plate: \" + _toDisplayString($data.driverInfo.licensePlate), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Car Model: \" + _toDisplayString($data.driverInfo.carModel), 1 /* TEXT */)]), _createCommentVNode(\" Upload documents section \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"license-upload\",\n    onChange: _cache[0] || (_cache[0] = function () {\n      return $options.uploadLicense && $options.uploadLicense.apply($options, arguments);\n    }),\n    accept: \".jpg, .jpeg, .png\"\n  }, null, 32 /* HYDRATE_EVENTS */), _hoisted_8, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"insurance-upload\",\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $options.uploadInsurance && $options.uploadInsurance.apply($options, arguments);\n    }),\n    accept: \".pdf, .doc, .docx\"\n  }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" Add more file upload inputs for other required documents \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.submitValidation && $options.submitValidation.apply($options, arguments);\n    })\n  }, \"Submit Validation\")]), _createCommentVNode(\" Display validation status \"), $data.validationStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"p\", null, _toDisplayString($data.validationStatusMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_toDisplayString","$data","driverInfo","name","licensePlate","carModel","_hoisted_5","_hoisted_6","_hoisted_7","type","id","onChange","_cache","$options","uploadLicense","apply","arguments","accept","_hoisted_8","uploadInsurance","onClick","submitValidation","validationStatus","_hoisted_9","_hoisted_10","validationStatusMessage"],"sources":["C:\\Users\\Clement\\Desktop\\ProjetS4\\taxi-de-vie\\src\\components\\Driver\\ApprovalDriver.vue"],"sourcesContent":["<template>\r\n    <div class=\"validation-container\">\r\n      <h1>Driver Validation</h1>\r\n  \r\n      <!-- Display driver information from MongoDB -->\r\n      <div class=\"driver-info\">\r\n        <h2>Driver Information</h2>\r\n        <p>Name: {{ driverInfo.name }}</p>\r\n        <p>License Plate: {{ driverInfo.licensePlate }}</p>\r\n        <p>Car Model: {{ driverInfo.carModel }}</p>\r\n      </div>\r\n  \r\n      <!-- Upload documents section -->\r\n      <div class=\"upload-documents\">\r\n        <h2>Upload Documents</h2>\r\n        <label for=\"license-upload\">Driver's License:</label>\r\n        <input type=\"file\" id=\"license-upload\" v-on:change=\"uploadLicense\" accept=\".jpg, .jpeg, .png\">\r\n  \r\n        <label for=\"insurance-upload\">Car Insurance:</label>\r\n        <input type=\"file\" id=\"insurance-upload\" v-on:change=\"uploadInsurance\" accept=\".pdf, .doc, .docx\">\r\n  \r\n        <!-- Add more file upload inputs for other required documents -->\r\n  \r\n        <button v-on:click=\"submitValidation\">Submit Validation</button>\r\n      </div>\r\n  \r\n      <!-- Display validation status -->\r\n      <div v-if=\"validationStatus\" class=\"validation-status\">\r\n        <h2>Validation Status</h2>\r\n        <p>{{ validationStatusMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        driverInfo: {}, // Will be fetched from MongoDB\r\n        licenseDocument: null,\r\n        insuranceDocument: null,\r\n        validationStatus: false,\r\n        validationStatusMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchDataFromMongoDB() {\r\n        // Make a request to your backend to fetch the driver information\r\n        try {\r\n          const response = await fetch('/api/driverInfo'); // Adjust the endpoint as needed\r\n          this.driverInfo = await response.json();\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      uploadLicense(event) {\r\n        this.licenseDocument = event.target.files[0];\r\n      },\r\n      uploadInsurance(event) {\r\n        this.insuranceDocument = event.target.files[0];\r\n      },\r\n      // Implement methods for uploading other documents\r\n  \r\n      async submitValidation() {\r\n        // Send documents and driver information to the backend for validation\r\n        const formData = new FormData();\r\n        formData.append('licenseDocument', this.licenseDocument);\r\n        formData.append('insuranceDocument', this.insuranceDocument);\r\n        // Add more formData.append calls for other documents\r\n  \r\n        try {\r\n          const response = await fetch('/api/validateDriver', {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n  \r\n          const result = await response.json();\r\n  \r\n          // Update validationStatus and validationStatusMessage based on the result\r\n          this.validationStatus = true;\r\n          this.validationStatusMessage = result.message;\r\n        } catch (error) {\r\n          console.error('Error submitting validation:', error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      // Fetch driver information when the component is mounted\r\n      this.fetchDataFromMongoDB();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your component styles here */\r\n  .validation-container {\r\n    max-width: 600px;\r\n    margin: auto;\r\n  }\r\n  \r\n  .driver-info,\r\n  .upload-documents,\r\n  .validation-status {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* Add more styles as needed */\r\n  </style>\r\n  "],"mappings":";;;;;;EACS,SAAM;AAAsB;;sBAC/BA,mBAAA,CAA0B,YAAtB,mBAAiB;AAAA;;EAGhB,SAAM;AAAa;;sBACtBA,mBAAA,CAA2B,YAAvB,oBAAkB;AAAA;;EAOnB,SAAM;AAAkB;;sBAC3BA,mBAAA,CAAyB,YAArB,kBAAgB;AAAA;;sBACpBA,mBAAA,CAAqD;IAA9C,OAAI;EAAgB,GAAC,mBAAiB;AAAA;;sBAG7CA,mBAAA,CAAoD;IAA7C,OAAI;EAAkB,GAAC,gBAAc;AAAA;;;EASjB,SAAM;;;sBACjCA,mBAAA,CAA0B,YAAtB,mBAAiB;AAAA;;;uBA3BzBC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,UAA0B,EAE1BC,mBAAA,6CAAgD,EAChDJ,mBAAA,CAKM,OALNK,UAKM,GAJJC,UAA2B,EAC3BN,mBAAA,CAAkC,WAA/B,QAAM,GAAAO,gBAAA,CAAGC,KAAA,CAAAC,UAAU,CAACC,IAAI,kBAC3BV,mBAAA,CAAmD,WAAhD,iBAAe,GAAAO,gBAAA,CAAGC,KAAA,CAAAC,UAAU,CAACE,YAAY,kBAC5CX,mBAAA,CAA2C,WAAxC,aAAW,GAAAO,gBAAA,CAAGC,KAAA,CAAAC,UAAU,CAACG,QAAQ,iB,GAGtCR,mBAAA,8BAAiC,EACjCJ,mBAAA,CAWM,OAXNa,UAWM,GAVJC,UAAyB,EACzBC,UAAqD,EACrDf,mBAAA,CAA8F;IAAvFgB,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,gBAAgB;IAAMC,QAAM,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAa;IAAA;IAAEC,MAAM,EAAC;qCAE1EC,UAAoD,EACpDzB,mBAAA,CAAkG;IAA3FgB,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,kBAAkB;IAAMC,QAAM,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAM,eAAA,IAAAN,QAAA,CAAAM,eAAA,CAAAJ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAe;IAAA;IAAEC,MAAM,EAAC;qCAE9EpB,mBAAA,8DAAiE,EAEjEJ,mBAAA,CAAgE;IAAnD2B,OAAK,EAAAR,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAQ,gBAAA,IAAAR,QAAA,CAAAQ,gBAAA,CAAAN,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAgB;IAAA;KAAE,mBAAiB,E,GAGzDnB,mBAAA,+BAAkC,EACvBI,KAAA,CAAAqB,gBAAgB,I,cAA3B5B,mBAAA,CAGM,OAHN6B,UAGM,GAFJC,WAA0B,EAC1B/B,mBAAA,CAAoC,WAAAO,gBAAA,CAA9BC,KAAA,CAAAwB,uBAAuB,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}