{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Clement/Desktop/ProjetS4/taxi-de-vie/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Clement/Desktop/ProjetS4/taxi-de-vie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      driverInfo: {},\n      // Will be fetched from MongoDB\n      licenseDocument: null,\n      insuranceDocument: null,\n      validationStatus: false,\n      validationStatusMessage: \"\"\n    };\n  },\n  methods: {\n    fetchDataFromMongoDB: function fetchDataFromMongoDB() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/driverInfo');\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              _this.driverInfo = _context.sent;\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching data:', _context.t0);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    uploadLicense: function uploadLicense(event) {\n      this.licenseDocument = event.target.files[0];\n    },\n    uploadInsurance: function uploadInsurance(event) {\n      this.insuranceDocument = event.target.files[0];\n    },\n    // Implement methods for uploading other documents\n    submitValidation: function submitValidation() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var formData, response, result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // Send documents and driver information to the backend for validation\n              formData = new FormData();\n              formData.append('licenseDocument', _this2.licenseDocument);\n              formData.append('insuranceDocument', _this2.insuranceDocument);\n              // Add more formData.append calls for other documents\n              _context2.prev = 3;\n              _context2.next = 6;\n              return fetch('/api/validateDriver', {\n                method: 'POST',\n                body: formData\n              });\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n            case 9:\n              result = _context2.sent;\n              // Update validationStatus and validationStatusMessage based on the result\n              _this2.validationStatus = true;\n              _this2.validationStatusMessage = result.message;\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error('Error submitting validation:', _context2.t0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[3, 14]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    // Fetch driver information when the component is mounted\n    this.fetchDataFromMongoDB();\n  }\n};","map":{"version":3,"names":["data","driverInfo","licenseDocument","insuranceDocument","validationStatus","validationStatusMessage","methods","fetchDataFromMongoDB","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","sent","json","t0","console","error","stop","uploadLicense","event","target","files","uploadInsurance","submitValidation","_this2","_callee2","formData","result","_callee2$","_context2","FormData","append","method","body","message","mounted"],"sources":["C:\\Users\\Clement\\Desktop\\ProjetS4\\taxi-de-vie\\src\\components\\Driver\\ApprovalDriver.vue"],"sourcesContent":["<template>\r\n    <div class=\"validation-container\">\r\n      <h1>Driver Validation</h1>\r\n  \r\n      <!-- Display driver information from MongoDB -->\r\n      <div class=\"driver-info\">\r\n        <h2>Driver Information</h2>\r\n        <p>Name: {{ driverInfo.name }}</p>\r\n        <p>License Plate: {{ driverInfo.licensePlate }}</p>\r\n        <p>Car Model: {{ driverInfo.carModel }}</p>\r\n      </div>\r\n  \r\n      <!-- Upload documents section -->\r\n      <div class=\"upload-documents\">\r\n        <h2>Upload Documents</h2>\r\n        <label for=\"license-upload\">Driver's License:</label>\r\n        <input type=\"file\" id=\"license-upload\" v-on:change=\"uploadLicense\" accept=\".jpg, .jpeg, .png\">\r\n  \r\n        <label for=\"insurance-upload\">Car Insurance:</label>\r\n        <input type=\"file\" id=\"insurance-upload\" v-on:change=\"uploadInsurance\" accept=\".pdf, .doc, .docx\">\r\n  \r\n        <!-- Add more file upload inputs for other required documents -->\r\n  \r\n        <button v-on:click=\"submitValidation\">Submit Validation</button>\r\n      </div>\r\n  \r\n      <!-- Display validation status -->\r\n      <div v-if=\"validationStatus\" class=\"validation-status\">\r\n        <h2>Validation Status</h2>\r\n        <p>{{ validationStatusMessage }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        driverInfo: {}, // Will be fetched from MongoDB\r\n        licenseDocument: null,\r\n        insuranceDocument: null,\r\n        validationStatus: false,\r\n        validationStatusMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchDataFromMongoDB() {\r\n        // Make a request to your backend to fetch the driver information\r\n        try {\r\n          const response = await fetch('/api/driverInfo'); // Adjust the endpoint as needed\r\n          this.driverInfo = await response.json();\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      uploadLicense(event) {\r\n        this.licenseDocument = event.target.files[0];\r\n      },\r\n      uploadInsurance(event) {\r\n        this.insuranceDocument = event.target.files[0];\r\n      },\r\n      // Implement methods for uploading other documents\r\n  \r\n      async submitValidation() {\r\n        // Send documents and driver information to the backend for validation\r\n        const formData = new FormData();\r\n        formData.append('licenseDocument', this.licenseDocument);\r\n        formData.append('insuranceDocument', this.insuranceDocument);\r\n        // Add more formData.append calls for other documents\r\n  \r\n        try {\r\n          const response = await fetch('/api/validateDriver', {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n  \r\n          const result = await response.json();\r\n  \r\n          // Update validationStatus and validationStatusMessage based on the result\r\n          this.validationStatus = true;\r\n          this.validationStatusMessage = result.message;\r\n        } catch (error) {\r\n          console.error('Error submitting validation:', error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      // Fetch driver information when the component is mounted\r\n      this.fetchDataFromMongoDB();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your component styles here */\r\n  .validation-container {\r\n    max-width: 600px;\r\n    margin: auto;\r\n  }\r\n  \r\n  .driver-info,\r\n  .upload-documents,\r\n  .validation-status {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* Add more styles as needed */\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}