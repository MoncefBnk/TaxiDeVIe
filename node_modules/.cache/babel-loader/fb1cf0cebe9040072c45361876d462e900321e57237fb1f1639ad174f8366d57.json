{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Clement/Desktop/ProjetS4/taxi-de-vie/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Clement/Desktop/ProjetS4/taxi-de-vie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport default {\n  data: function data() {\n    return {\n      drivers: [] // This data will be fetched from the backend\n    };\n  },\n  mounted: function mounted() {\n    // Fetch driver data from the backend API\n    // For now, let's assume a mock API endpoint\n    this.fetchDrivers();\n  },\n  methods: {\n    fetchDrivers: function fetchDrivers() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // Simulate fetching drivers from the backend\n              // Replace this with actual API calls in a real application\n              _this.drivers = [{\n                id: 1,\n                name: 'John Doe',\n                car: 'Toyota Camry'\n              }, {\n                id: 2,\n                name: 'Jane Doe',\n                car: 'Honda Accord'\n              }\n              // Add more drivers as needed\n              ];\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","drivers","mounted","fetchDrivers","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","id","name","car","stop"],"sources":["C:\\Users\\Clement\\Desktop\\ProjetS4\\taxi-de-vie\\src\\components\\DriverList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Available Drivers</h2>\r\n      <ul>\r\n        <li v-for=\"driver in drivers\" :key=\"driver.id\">\r\n          {{ driver.name }} - {{ driver.car }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        drivers: [], // This data will be fetched from the backend\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch driver data from the backend API\r\n      // For now, let's assume a mock API endpoint\r\n      this.fetchDrivers();\r\n    },\r\n    methods: {\r\n      async fetchDrivers() {\r\n        // Simulate fetching drivers from the backend\r\n        // Replace this with actual API calls in a real application\r\n        this.drivers = [\r\n          { id: 1, name: 'John Doe', car: 'Toyota Camry' },\r\n          { id: 2, name: 'Jane Doe', car: 'Honda Accord' },\r\n          // Add more drivers as needed\r\n        ];\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styling for the DriverList component */\r\n  /* You can customize the styling based on your design */\r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    margin: 0.5em 0;\r\n    padding: 0.5em;\r\n    border: 1px solid #ccc;\r\n    background-color: #f9f9f9;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AAYE,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IACR;IACA;IACA,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACDD,YAAY,WAAAA,aAAA,EAAG;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACnB;cACA;cACAT,KAAI,CAACJ,OAAM,GAAI,CACb;gBAAEc,EAAE,EAAE,CAAC;gBAAEC,IAAI,EAAE,UAAU;gBAAEC,GAAG,EAAE;cAAe,CAAC,EAChD;gBAAEF,EAAE,EAAE,CAAC;gBAAEC,IAAI,EAAE,UAAU;gBAAEC,GAAG,EAAE;cAAe;cAC/C;cAAA,CACD;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}