{"ast":null,"code":"export default {\n  data: function data() {\n    return {\n      showValidation: false,\n      customerName: \"\",\n      pickupLocation: \"\",\n      requestId: null\n    };\n  },\n  methods: {\n    showValidationPopup: function showValidationPopup(customerName, pickupLocation, requestId) {\n      this.customerName = customerName;\n      this.pickupLocation = pickupLocation;\n      this.requestId = requestId;\n      this.showValidation = true;\n    },\n    acceptRide: function acceptRide() {\n      // Assuming you have a backend API to handle ride acceptance\n      // You might want to use a library like Axios for making API requests\n\n      // Example using Axios (make sure to install Axios first: npm install axios)\n      // import axios from 'axios';\n\n      // Assuming your backend API endpoint for accepting a ride is /api/accept-ride\n      // axios.post('/api/accept-ride', { requestId: this.requestId })\n      //   .then(response => {\n      //     // Handle success (maybe show a success message)\n      //     console.log('Ride accepted successfully');\n      //   })\n      //   .catch(error => {\n      //     // Handle error (maybe show an error message)\n      //     console.error('Error accepting ride', error);\n      //   });\n\n      // Placeholder: Close the popup after a successful acceptance\n      this.showValidation = false;\n    },\n    rejectRide: function rejectRide() {\n      // Assuming you have a backend API to handle ride rejection\n\n      // Example using Axios\n      // Assuming your backend API endpoint for rejecting a ride is /api/reject-ride\n      // axios.post('/api/reject-ride', { requestId: this.requestId })\n      //   .then(response => {\n      //     // Handle success (maybe show a success message)\n      //     console.log('Ride rejected successfully');\n      //   })\n      //   .catch(error => {\n      //     // Handle error (maybe show an error message)\n      //     console.error('Error rejecting ride', error);\n      //   });\n\n      // Placeholder: Close the popup after a successful rejection\n      this.showValidation = false;\n    }\n  }\n};","map":{"version":3,"names":["data","showValidation","customerName","pickupLocation","requestId","methods","showValidationPopup","acceptRide","rejectRide"],"sources":["C:\\Users\\Clement\\Desktop\\ProjetS4\\taxi-de-vie\\src\\components\\Driver\\ApprovalDriver.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"showValidation\">\r\n      <div class=\"validation-popup\">\r\n        <div class=\"popup-content\">\r\n          <h2>New Ride Request</h2>\r\n          <p>{{ customerName }} is requesting a ride.</p>\r\n          <p>Location: {{ pickupLocation }}</p>\r\n          <button @click=\"acceptRide\">Accept</button>\r\n          <button @click=\"rejectRide\">Reject</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showValidation: false,\r\n      customerName: \"\",\r\n      pickupLocation: \"\",\r\n      requestId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    showValidationPopup(customerName, pickupLocation, requestId) {\r\n      this.customerName = customerName;\r\n      this.pickupLocation = pickupLocation;\r\n      this.requestId = requestId;\r\n      this.showValidation = true;\r\n    },\r\n    acceptRide() {\r\n      // Assuming you have a backend API to handle ride acceptance\r\n      // You might want to use a library like Axios for making API requests\r\n\r\n      // Example using Axios (make sure to install Axios first: npm install axios)\r\n      // import axios from 'axios';\r\n\r\n      // Assuming your backend API endpoint for accepting a ride is /api/accept-ride\r\n      // axios.post('/api/accept-ride', { requestId: this.requestId })\r\n      //   .then(response => {\r\n      //     // Handle success (maybe show a success message)\r\n      //     console.log('Ride accepted successfully');\r\n      //   })\r\n      //   .catch(error => {\r\n      //     // Handle error (maybe show an error message)\r\n      //     console.error('Error accepting ride', error);\r\n      //   });\r\n\r\n      // Placeholder: Close the popup after a successful acceptance\r\n      this.showValidation = false;\r\n    },\r\n    rejectRide() {\r\n      // Assuming you have a backend API to handle ride rejection\r\n\r\n      // Example using Axios\r\n      // Assuming your backend API endpoint for rejecting a ride is /api/reject-ride\r\n      // axios.post('/api/reject-ride', { requestId: this.requestId })\r\n      //   .then(response => {\r\n      //     // Handle success (maybe show a success message)\r\n      //     console.log('Ride rejected successfully');\r\n      //   })\r\n      //   .catch(error => {\r\n      //     // Handle error (maybe show an error message)\r\n      //     console.error('Error rejecting ride', error);\r\n      //   });\r\n\r\n      // Placeholder: Close the popup after a successful rejection\r\n      this.showValidation = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.validation-popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.popup-content {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  margin: 5px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAeA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmB,WAAAA,oBAACJ,YAAY,EAAEC,cAAc,EAAEC,SAAS,EAAE;MAC3D,IAAI,CAACF,YAAW,GAAIA,YAAY;MAChC,IAAI,CAACC,cAAa,GAAIA,cAAc;MACpC,IAAI,CAACC,SAAQ,GAAIA,SAAS;MAC1B,IAAI,CAACH,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDM,UAAU,WAAAA,WAAA,EAAG;MACX;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,IAAI,CAACN,cAAa,GAAI,KAAK;IAC7B,CAAC;IACDO,UAAU,WAAAA,WAAA,EAAG;MACX;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,IAAI,CAACP,cAAa,GAAI,KAAK;IAC7B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}