{"ast":null,"code":"import \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/web.self.js\";\nvar hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n *\r\n * @returns {boolean}\r\n */\nvar hasStandardBrowserEnv = function (product) {\n  return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0;\n}(typeof navigator !== 'undefined' && navigator.product);\n\n/**\r\n * Determine if we're running in a standard browser webWorker environment\r\n *\r\n * Although the `isStandardBrowserEnv` method indicates that\r\n * `allows axios to run in a web worker`, the WebWorker will still be\r\n * filtered out due to its judgment standard\r\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\r\n * This leads to a problem when axios post `FormData` in webWorker\r\n */\nvar hasStandardBrowserWebWorkerEnv = function () {\n  return typeof WorkerGlobalScope !== 'undefined' &&\n  // eslint-disable-next-line no-undef\n  self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';\n}();\nexport { hasBrowserEnv, hasStandardBrowserWebWorkerEnv, hasStandardBrowserEnv };","map":{"version":3,"names":["hasBrowserEnv","window","document","hasStandardBrowserEnv","product","indexOf","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","self","importScripts"],"sources":["C:/Users/Clement/Desktop/ProjetS4/taxi-de-vie/node_modules/axios/lib/platform/common/utils.js"],"sourcesContent":["const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n *\r\n * @returns {boolean}\r\n */\r\nconst hasStandardBrowserEnv = (\r\n  (product) => {\r\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\r\n  })(typeof navigator !== 'undefined' && navigator.product);\r\n\r\n/**\r\n * Determine if we're running in a standard browser webWorker environment\r\n *\r\n * Although the `isStandardBrowserEnv` method indicates that\r\n * `allows axios to run in a web worker`, the WebWorker will still be\r\n * filtered out due to its judgment standard\r\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\r\n * This leads to a problem when axios post `FormData` in webWorker\r\n */\r\nconst hasStandardBrowserWebWorkerEnv = (() => {\r\n  return (\r\n    typeof WorkerGlobalScope !== 'undefined' &&\r\n    // eslint-disable-next-line no-undef\r\n    self instanceof WorkerGlobalScope &&\r\n    typeof self.importScripts === 'function'\r\n  );\r\n})();\r\n\r\nexport {\r\n  hasBrowserEnv,\r\n  hasStandardBrowserWebWorkerEnv,\r\n  hasStandardBrowserEnv\r\n}\r\n"],"mappings":";;AAAA,IAAMA,aAAa,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOC,QAAQ,KAAK,WAAW;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,qBAAqB,GACzB,UAACC,OAAO,EAAK;EACX,OAAOJ,aAAa,IAAI,CAAC,aAAa,EAAE,cAAc,EAAE,IAAI,CAAC,CAACK,OAAO,CAACD,OAAO,CAAC,GAAG,CAAC;AACpF,CAAC,CAAE,OAAOE,SAAS,KAAK,WAAW,IAAIA,SAAS,CAACF,OAAO,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMG,8BAA8B,GAAI,YAAM;EAC5C,OACE,OAAOC,iBAAiB,KAAK,WAAW;EACxC;EACAC,IAAI,YAAYD,iBAAiB,IACjC,OAAOC,IAAI,CAACC,aAAa,KAAK,UAAU;AAE5C,CAAC,CAAE,CAAC;AAEJ,SACEV,aAAa,EACbO,8BAA8B,EAC9BJ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}