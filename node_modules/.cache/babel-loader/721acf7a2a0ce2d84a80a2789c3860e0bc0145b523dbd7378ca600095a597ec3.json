{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport ForgotPasswordView from '@/views/ForgotPasswordView.vue';\nimport LoginPage from '../components/LoginPage.vue';\nimport RegisterPage from '../components/RegisterPage.vue';\nimport BookingForm from '@/components/Customer/BookingForm.vue';\nimport DashBoard from '@/components/Customer/DashBoard.vue';\nimport ProfileCustomer from '@/components/Customer/ProfileCustomer.vue';\nimport FAQCompo from '@/components/FAQCompo.vue';\nimport { auth } from '@/firebase'; // Import the Firebase authentication instance\n\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginPage,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterPage,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: DashBoard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/forgot-password',\n  name: 'ForgotPassword',\n  component: ForgotPasswordView,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/booking',\n  name: 'Booking',\n  component: BookingForm,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/faq',\n  name: 'FAQ',\n  component: FAQCompo\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: ProfileCustomer,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// Use router.beforeEach to check authentication state before each navigation\nrouter.beforeEach(function (to, from, next) {\n  var requiresAuth = to.meta.requiresAuth;\n  var guestRoute = to.meta.guest;\n  auth.onAuthStateChanged(function (user) {\n    if (requiresAuth && !user) {\n      // User is not logged in and trying to access a protected route\n      next({\n        name: 'Login'\n      });\n    } else if (guestRoute && user) {\n      // User is logged in and trying to access a guest route\n      next({\n        name: 'Home'\n      });\n    } else {\n      next();\n    }\n  });\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","ForgotPasswordView","LoginPage","RegisterPage","BookingForm","DashBoard","ProfileCustomer","FAQCompo","auth","routes","path","name","component","meta","guest","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","guestRoute","onAuthStateChanged","user"],"sources":["/Users/moncefbenkhalfallah/Desktop/TaxiDeVie/taxi-de-vie/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport ForgotPasswordView from '@/views/ForgotPasswordView.vue';\nimport LoginPage from '../components/LoginPage.vue';\nimport RegisterPage from '../components/RegisterPage.vue';\nimport BookingForm from '@/components/Customer/BookingForm.vue';\nimport DashBoard from '@/components/Customer/DashBoard.vue';\nimport ProfileCustomer from '@/components/Customer/ProfileCustomer.vue';\nimport FAQCompo from '@/components/FAQCompo.vue'; \nimport { auth } from '@/firebase'; // Import the Firebase authentication instance\n\nconst routes = [\n  { path: '/', name: 'Home', component: HomeView, meta: { guest: true } },\n  { path: '/login', name: 'Login', component: LoginPage, meta: { guest: true } },\n  { path: '/register', name: 'Register', component: RegisterPage, meta: { guest: true } },\n  { path: '/dashboard', name: 'Dashboard', component: DashBoard, meta: { requiresAuth: true } },\n  { path: '/forgot-password', name: 'ForgotPassword', component: ForgotPasswordView, meta: { guest: true } },\n  { path: '/booking', name: 'Booking', component: BookingForm, meta: { requiresAuth: true } },\n  { path: '/faq', name: 'FAQ', component: FAQCompo }, \n  { path: '/profile', name: 'Profile', component: ProfileCustomer, meta: { requiresAuth: true } }, \n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Use router.beforeEach to check authentication state before each navigation\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.meta.requiresAuth;\n  const guestRoute = to.meta.guest;\n\n  auth.onAuthStateChanged((user) => {\n    if (requiresAuth && !user) {\n      // User is not logged in and trying to access a protected route\n      next({ name: 'Login' });\n    } else if (guestRoute && user) {\n      // User is logged in and trying to access a guest route\n      next({ name: 'Home' });\n    } else {\n      next();\n    }\n  });\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,IAAI,QAAQ,YAAY,CAAC,CAAC;;AAEnC,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEZ,QAAQ;EAAEa,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAK;AAAE,CAAC,EACvE;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEV,SAAS;EAAEW,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAK;AAAE,CAAC,EAC9E;EAAEJ,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAET,YAAY;EAAEU,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAK;AAAE,CAAC,EACvF;EAAEJ,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEP,SAAS;EAAEQ,IAAI,EAAE;IAAEE,YAAY,EAAE;EAAK;AAAE,CAAC,EAC7F;EAAEL,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEX,kBAAkB;EAAEY,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAK;AAAE,CAAC,EAC1G;EAAEJ,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAER,WAAW;EAAES,IAAI,EAAE;IAAEE,YAAY,EAAE;EAAK;AAAE,CAAC,EAC3F;EAAEL,IAAI,EAAE,MAAM;EAAEC,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEL;AAAS,CAAC,EAClD;EAAEG,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEN,eAAe;EAAEO,IAAI,EAAE;IAAEE,YAAY,EAAE;EAAK;AAAE,CAAC,CAChG;AAED,IAAMC,MAAM,GAAGlB,YAAY,CAAC;EAC1BmB,OAAO,EAAElB,gBAAgB,CAACmB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX,MAAM,EAANA;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMT,YAAY,GAAGO,EAAE,CAACT,IAAI,CAACE,YAAY;EACzC,IAAMU,UAAU,GAAGH,EAAE,CAACT,IAAI,CAACC,KAAK;EAEhCN,IAAI,CAACkB,kBAAkB,CAAC,UAACC,IAAI,EAAK;IAChC,IAAIZ,YAAY,IAAI,CAACY,IAAI,EAAE;MACzB;MACAH,IAAI,CAAC;QAAEb,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIc,UAAU,IAAIE,IAAI,EAAE;MAC7B;MACAH,IAAI,CAAC;QAAEb,IAAI,EAAE;MAAO,CAAC,CAAC;IACxB,CAAC,MAAM;MACLa,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}