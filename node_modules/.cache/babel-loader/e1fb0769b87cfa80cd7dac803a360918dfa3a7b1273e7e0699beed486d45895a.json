{"ast":null,"code":"import \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nexport default {\n  data: function data() {\n    return {\n      bookingData: {\n        startingPoint: '',\n        destination: ''\n      },\n      showSchedule: false,\n      exampleSchedules: [{\n        id: 1,\n        day: 'Lundi',\n        startTime: '9:00',\n        endTime: '17:00'\n      }, {\n        id: 2,\n        day: 'Mardi',\n        startTime: '9:00',\n        endTime: '17:00'\n      }\n      // Ajoutez d'autres horaires d'exemple au besoin\n      ],\n\n      selectedSchedule: []\n    };\n  },\n  computed: {\n    isSearchEnabled: function isSearchEnabled() {\n      return this.bookingData.startingPoint && this.bookingData.destination;\n    }\n  },\n  methods: {\n    submitBooking: function submitBooking() {\n      console.log('Réservation soumise :', this.bookingData, 'Horaires sélectionnés :', this.selectedSchedule);\n    },\n    swapLocations: function swapLocations() {\n      var temp = this.bookingData.startingPoint;\n      this.bookingData.startingPoint = this.bookingData.destination;\n      this.bookingData.destination = temp;\n    },\n    searchSchedule: function searchSchedule() {\n      // Effectuez la logique pour récupérer et afficher les données d'horaire\n      this.showSchedule = true; // À des fins de test, définissez showSchedule sur true\n    },\n    confirmReservation: function confirmReservation() {\n      var _this = this;\n      if (this.selectedSchedule.length > 0) {\n        var selectedScheduleDetails = this.selectedSchedule.map(function (id) {\n          var schedule = _this.exampleSchedules.find(function (s) {\n            return s.id === id;\n          });\n          return \"\".concat(schedule.day, \" : \").concat(schedule.startTime, \" - \").concat(schedule.endTime);\n        }).join('\\n');\n        var confirmationMessage = \"R\\xE9servation confirm\\xE9e !\\n\\nHoraires s\\xE9lectionn\\xE9s :\\n\".concat(selectedScheduleDetails, \"\\n\\nLieu de prise en charge : \").concat(this.bookingData.startingPoint, \"\\nLieu de d\\xE9pose : \").concat(this.bookingData.destination);\n\n        // Affiche une notification avec les détails de l'horaire, le lieu de prise en charge et le lieu de dépose\n        window.alert(confirmationMessage);\n      } else {\n        window.alert('Veuillez sélectionner au moins un horaire.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","bookingData","startingPoint","destination","showSchedule","exampleSchedules","id","day","startTime","endTime","selectedSchedule","computed","isSearchEnabled","methods","submitBooking","console","log","swapLocations","temp","searchSchedule","confirmReservation","_this","length","selectedScheduleDetails","map","schedule","find","s","concat","join","confirmationMessage","window","alert"],"sources":["C:\\Users\\Clement\\Desktop\\ProjetS4\\taxi-de-vie\\src\\components\\BookingForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"header\">Réserver un trajet</h2>\r\n    <form @submit.prevent=\"submitBooking\" class=\"booking-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"startingPoint\">Lieu de prise en charge :</label>\r\n        <input type=\"text\" id=\"startingPoint\" v-model=\"bookingData.startingPoint\" required placeholder=\"Entrez le lieu de prise en charge\">\r\n      </div>\r\n\r\n      <div class=\"form-group arrow-container\">\r\n        <span class=\"arrow\" @click=\"swapLocations\">&#8593;</span>\r\n        <span class=\"arrow\" @click=\"swapLocations\">&#8595;</span>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"destination\">Lieu de dépose :</label>\r\n        <input type=\"text\" id=\"destination\" v-model=\"bookingData.destination\" required placeholder=\"Entrez le lieu de dépose\">\r\n      </div>\r\n\r\n      <button type=\"button\" @click=\"searchSchedule\" :disabled=\"!isSearchEnabled\" class=\"search-button\">Recherche</button>\r\n\r\n      <div v-if=\"showSchedule\" class=\"schedule\">\r\n        <h3>Sélectionnez un horaire :</h3>\r\n        <ul>\r\n          <li v-for=\"schedule in exampleSchedules\" :key=\"schedule.id\">\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"selectedSchedule\" :value=\"schedule.id\">\r\n              {{ schedule.day }} : {{ schedule.startTime }} - {{ schedule.endTime }}\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <button v-if=\"selectedSchedule.length > 0\" type=\"button\" @click=\"confirmReservation\" class=\"confirm-button\">Confirmer la réservation</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      bookingData: {\r\n        startingPoint: '',\r\n        destination: '',\r\n      },\r\n      showSchedule: false,\r\n      exampleSchedules: [\r\n        { id: 1, day: 'Lundi', startTime: '9:00', endTime: '17:00' },\r\n        { id: 2, day: 'Mardi', startTime: '9:00', endTime: '17:00' },\r\n        // Ajoutez d'autres horaires d'exemple au besoin\r\n      ],\r\n      selectedSchedule: [],\r\n    };\r\n  },\r\n  computed: {\r\n    isSearchEnabled() {\r\n      return this.bookingData.startingPoint && this.bookingData.destination;\r\n    },\r\n  },\r\n  methods: {\r\n    submitBooking() {\r\n      console.log('Réservation soumise :', this.bookingData, 'Horaires sélectionnés :', this.selectedSchedule);\r\n    },\r\n    swapLocations() {\r\n      const temp = this.bookingData.startingPoint;\r\n      this.bookingData.startingPoint = this.bookingData.destination;\r\n      this.bookingData.destination = temp;\r\n    },\r\n    searchSchedule() {\r\n      // Effectuez la logique pour récupérer et afficher les données d'horaire\r\n      this.showSchedule = true; // À des fins de test, définissez showSchedule sur true\r\n    },\r\n    confirmReservation() {\r\n      if (this.selectedSchedule.length > 0) {\r\n        const selectedScheduleDetails = this.selectedSchedule.map(id => {\r\n          const schedule = this.exampleSchedules.find(s => s.id === id);\r\n          return `${schedule.day} : ${schedule.startTime} - ${schedule.endTime}`;\r\n        }).join('\\n');\r\n\r\n        const confirmationMessage = `Réservation confirmée !\\n\\nHoraires sélectionnés :\\n${selectedScheduleDetails}\\n\\nLieu de prise en charge : ${this.bookingData.startingPoint}\\nLieu de dépose : ${this.bookingData.destination}`;\r\n\r\n        // Affiche une notification avec les détails de l'horaire, le lieu de prise en charge et le lieu de dépose\r\n        window.alert(confirmationMessage);\r\n      } else {\r\n        window.alert('Veuillez sélectionner au moins un horaire.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.booking-form {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.arrow-container {\r\n  text-align: center;\r\n}\r\n\r\n.arrow {\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.search-button,\r\n.confirm-button {\r\n  background-color: #4CAF50;\r\n  color: #fff;\r\n  padding: 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.search-button:hover,\r\n.confirm-button:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AAuCA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE;MACf,CAAC;MACDC,YAAY,EAAE,KAAK;MACnBC,gBAAgB,EAAE,CAChB;QAAEC,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAQ,CAAC,EAC5D;QAAEH,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAQ;MAC3D;MAAA,CACD;;MACDC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,WAAAA,gBAAA,EAAG;MAChB,OAAO,IAAI,CAACX,WAAW,CAACC,aAAY,IAAK,IAAI,CAACD,WAAW,CAACE,WAAW;IACvE;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,aAAa,WAAAA,cAAA,EAAG;MACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACf,WAAW,EAAE,yBAAyB,EAAE,IAAI,CAACS,gBAAgB,CAAC;IAC1G,CAAC;IACDO,aAAa,WAAAA,cAAA,EAAG;MACd,IAAMC,IAAG,GAAI,IAAI,CAACjB,WAAW,CAACC,aAAa;MAC3C,IAAI,CAACD,WAAW,CAACC,aAAY,GAAI,IAAI,CAACD,WAAW,CAACE,WAAW;MAC7D,IAAI,CAACF,WAAW,CAACE,WAAU,GAAIe,IAAI;IACrC,CAAC;IACDC,cAAc,WAAAA,eAAA,EAAG;MACf;MACA,IAAI,CAACf,YAAW,GAAI,IAAI,EAAE;IAC5B,CAAC;IACDgB,kBAAkB,WAAAA,mBAAA,EAAG;MAAA,IAAAC,KAAA;MACnB,IAAI,IAAI,CAACX,gBAAgB,CAACY,MAAK,GAAI,CAAC,EAAE;QACpC,IAAMC,uBAAsB,GAAI,IAAI,CAACb,gBAAgB,CAACc,GAAG,CAAC,UAAAlB,EAAC,EAAK;UAC9D,IAAMmB,QAAO,GAAIJ,KAAI,CAAChB,gBAAgB,CAACqB,IAAI,CAAC,UAAAC,CAAA;YAAA,OAAKA,CAAC,CAACrB,EAAC,KAAMA,EAAE;UAAA,EAAC;UAC7D,UAAAsB,MAAA,CAAUH,QAAQ,CAAClB,GAAG,SAAAqB,MAAA,CAAMH,QAAQ,CAACjB,SAAS,SAAAoB,MAAA,CAAMH,QAAQ,CAAChB,OAAO;QACtE,CAAC,CAAC,CAACoB,IAAI,CAAC,IAAI,CAAC;QAEb,IAAMC,mBAAkB,sEAAAF,MAAA,CAA2DL,uBAAuB,oCAAAK,MAAA,CAAiC,IAAI,CAAC3B,WAAW,CAACC,aAAa,4BAAA0B,MAAA,CAAsB,IAAI,CAAC3B,WAAW,CAACE,WAAW,CAAE;;QAE7N;QACA4B,MAAM,CAACC,KAAK,CAACF,mBAAmB,CAAC;MACnC,OAAO;QACLC,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC5D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}