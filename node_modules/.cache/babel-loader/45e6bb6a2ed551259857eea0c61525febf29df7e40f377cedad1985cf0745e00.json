{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Forgot Password\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"Reset Password\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email address\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_2], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","value","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","resetPassword","placeholder","$data","email","$event","_hoisted_2"],"sources":["/Users/moncefbenkhalfallah/Desktop/taxi-de-vie/src/views/ForgotPasswordView.vue"],"sourcesContent":["\n<template>\n    <div>\n        <h2>Forgot Password</h2>\n        <form @submit.prevent=\"resetPassword\">\n            <input type=\"email\" placeholder=\"Email address\" v-model=\"email\" />\n            <input type=\"submit\" value=\"Reset Password\" />\n        </form>\n    </div>\n</template>\n  \n<script>\n\nimport { auth } from '@/firebase'; // Import your Firebase configuration\n\nexport default {\n    data() {\n        return {\n            email: '',\n        };\n    },\n    methods: {\n        resetPassword() {\n            auth\n                .sendPasswordResetEmail(this.email)\n                .then(() => {\n                    console.log('Password reset email sent successfully');\n                    // You can add a success message or redirect the user to the login page\n                })\n                .catch((error) => {\n                    console.error('Error sending password reset email', error);\n                    // Handle the error, display a message, etc.\n                });\n        },\n    },\n};\n</script>\n  "],"mappings":";gCAGQA,mBAAA,CAAwB,YAApB,iBAAe;gCAGfA,mBAAA,CAA8C;EAAvCC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;uBAJnCC,mBAAA,CAMM,cALFC,UAAwB,EACxBJ,mBAAA,CAGO;IAHAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;sBAChCR,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,OAAO;IAACU,WAAW,EAAC,eAAe;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;iDAALF,KAAA,CAAAC,KAAK,E,GAC9DE,UAA8C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}